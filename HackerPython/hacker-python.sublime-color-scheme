{
    // GitHub: https://github.com/Kourva/HackerPython
    "name": "Color Scheme - hacker-python",

    "variables": {
        // Define variables here
    },

    // Global
    "globals": {

        // Background & Foreground
        "foreground": "#ffffffff",
        "background": "#000000ff",
        
        // Line
        "line_highlight": "#335500ff",

        // Invisible
        "invisibles": "#5b5353ff",

        // Gutter
        "gutter": "#000000ff",

        // Caret
        "caret": "#ffffffff",
        
        // Accent
        "accent": "#00ff00ff",
        "minimap_border": "#00ff00ff",

        // Selection
        "selection": "#00aa0022",
        "selection_border": "#ffffffff",
        "selection_corner_style": "round",

        // Spell 
        "misspelling": "#ff0000ff",
        "fold_marker": "#ffffffff",

        // Brackets
        "brackets_options": "bold underline",
        "bracket_contents_options": "bold underline",
        "brackets_foreground": "#00ff00ff",
        "bracket_contents_foreground": "#00ff00ff",

        // Tags
        "tags_options": "bold underline",
        "tags_foreground": "#00557fff",
 
        // Shadows
        "shadow": "#335500ff",
        "shadow_width": "10",

        // Line diff
        "line_diff_modified": "#335500ff",
        "line_diff_added": "#00aa00ff",
        "line_diff_deleted": "#550000ff",
        "line_diff_modified": "#002200ff",

        // Guide
        "guide": "#002200ff",
    },

    // Rules
    "rules":
    [

        // Keywords
        {
            "name": "Import, return, math operators, loop keywords",
            "scope": "keyword",
            "foreground": "#55aa00ff",
        },

        // Variable types
        {
            "name": "Variable types and arrows",
            "scope": "storage.type",
            "foreground": "#ffaa00ff"
        },

        // Variables
        {
            "name": "Variable",
            "scope": "variable",
            "foreground": "#00aa00ff",
        },

        // Parameters
        {
            "name": "Parameters",
            "scope": "variable.parameter",
            "foreground": "#555500ff",
        },

        // Function name
        {
            "name": "Function Definitions (and Tags)",
            "scope": "entity.name",
            "foreground": "#ff5500ff",

        },

        // Functions
        {
            "name": "Functions",
            "scope": "variable.function entity.name.function, entity.name.function.templated, entity.name.function.member.static",
            "foreground": "#ff557fff",

        },

        // Constants
        {
            "name": "Constants",
            "scope": "constant",
            "foreground": "#ff0000ff",
            "font_style": "bold",
        },

        // Class name
        {
            "name": "Class name",
            "scope": "entity.name.class",
            "foreground": "#ff5500ff",
        },

        // Reserved variable names (self, arguments, super)
        {
            "name": "This",
            "scope": "variable.language",
            "foreground": "#ff5500ff",
        },

        // Tag
        {
            "name": "Tags",
            "scope": "entity.name.tag",
            "foreground": "#55aaffff",
        },

        // Tag attributes
        {
            "name": "Tag attributes",
            "scope": "entity.other.attribute-name",
            "foreground": "#55aaffff",
        },

        // Markup code
        {
            "name": "Markup code",
            "scope": "markup.raw",
            "foreground": "#55aa00ff",
        },

        // Markup links
        {
            "name": "Markup links",
            "scope": "markup.underline.link",
            "foreground": "#55aaffff",
        },

        // Comments
        {
            "name": "Comment",
            "scope": "comment, comment keyword, comment markup.underline.link, comment string, comment punctuation.definition, comment punctuation, comment text",
            "foreground": "#004e75ff",
            "font_style": "italic"
        },

        // Strings
        {
            "name": "String",
            "scope": "string.quoted",
            "foreground": "#ad6affff",
        },

        // Numbers
        {
            "name": "Number",
            "scope": "constant.numeric",
            "foreground": "#ff0000ff",
        },

        // Escape characters
        { 
            "name" : "Character escape",
            "scope" : "constant.character.escape",
            "foreground": "#cc0000ff" 
        },

        // Equals
        {
            "name": "Equals",
            "scope": "keyword.operator.assignment, keyword.operator.arithmetic, keyword.operator.bitwise",
            "foreground": "#00ff00ff",
            "font_style": "bold",
        },

        // Illegal & invalid
        {
            "name": "Invalid illegal",
            "scope": "invalid.illegal",
            "foreground": "#ff0000ff",
        },

        // Linter warning
        {
            "name": "Linter warning",
            "scope": "markup.warning",
            "foreground": "#004444ff",
        },

        // Linter error
        {
            "name": "Linter error",
            "scope": "markup.error",
            "foreground": "#aa0000ff",
        },

        // Function -> call
        { 
            "name" : "Function names / calls",
            "scope" : "support.function",
            "foreground": "#ffff00ff",
            "font_style": "italic"
        },

        // Global, ... Keywords
        { 
            "name" : "Keywords that affect the storage of a variable, function or data structure should use the following scope. Examples include static, inline, const, public and private.",
            "scope" : "storage.modifier, storage.type.modifier",
            "font_style": "italic",
            "foreground": "#ff0000ff" 
        },

        // String label
        { 
            "name" : "String label",
            "scope" : "string.unquoted.label",
            "foreground": "#fff1f3" 
        },

        // Source in template string
        { 
            "name" : "Source in template string",
            "scope" : "string source",
            "foreground": "#fff1f3" 
        },

        // Embedded punctuation
        { 
            "name" : "Embedded punctuation begin / end in template string",
            "scope" : "string source punctuation.section.embedded,string punctuation.definition.string source",
            "foreground": "#948a8b" 
        },

        // String regexp
        { 
            "name" : "String regexp begin / end",
            "scope" : "string.regexp punctuation.definition.string.begin,string.regexp punctuation.definition.string.end",
            "foreground": "#fd6883" 
        },

        // Restructured text
        { 
            "name" : "refs (Restructured text)",
            "scope" : "string.other.ref,string.other.restructuredtext.ref",
            "foreground": "#adda78" 
        },

        // Empty
        // {
        //     "name": "",
        //     "scope": "",
        //     "foreground": "",
        // }
    ]
}
